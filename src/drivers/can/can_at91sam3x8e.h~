/*
	Licensed to the Apache Software Foundation (ASF) under one
	or more contributor license agreements.	 See the NOTICE file
	distributed with this work for additional information
	regarding copyright ownership.	The ASF licenses this file
	to you under the Apache License, Version 2.0 (the
	"License"); you may not use this file except in compliance
	with the License.	 You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing,
	software distributed under the License is distributed on an
	"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, either express or implied.	See the License for the
	specific language governing permissions and limitations
	under the License.
*/


#ifndef _CSP_IF_CAN_H_
#define _CSP_IF_CAN_H_

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>

#include <csp/csp.h>
#include <csp/csp_interface.h>

/** CAN interface modes */
#define CSP_CAN_MASKED		0
#define CSP_CAN_PROMISC		1

extern csp_iface_t csp_if_can;

/* CAN configuration struct */
struct csp_can_config {
	uint32_t bitrate;
	uint32_t clock_speed;
	char *ifc;
};

/**
 * Init CAN interface
 * @param mode Must be either CSP_CAN_MASKED or CSP_CAN_PROMISC
 * @param conf Pointer to configuration struct.
 * @return 0 if CAN interface was successfully initialized, -1 otherwise
 */
int csp_can_init(uint8_t mode, struct csp_can_config *conf);

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* _CSP_IF_CAN_H_ */
